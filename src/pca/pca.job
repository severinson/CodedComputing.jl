#!/bin/sh -l
# Run 
#SBATCH --job-name=pca.jl
#SBATCH --output=pca.out
#SBATCH --nodes=19
#SBATCH --time=600:00

export JULIA_DEPOT_PATH="/shared/.julia/"
date
filename=/shared/.julia/dev/CodedComputing/src/pca/pca.jl

# 1000 genomes (rows shuffled)
input_file=/shared/.julia/dev/CodedComputing/simulations/1000genomes/inputfile_210208.h5
output_directory=/shared/.julia/dev/CodedComputing/simulations/1000genomes/210208/

# 1000 genomes (rows shuffled, process stragglers first)
# input_file=/shared/.julia/dev/CodedComputing/simulations/1000genomes/inputfile_210212.h5
# output_directory=/shared/.julia/dev/CodedComputing/simulations/1000genomes/210212/

# sparse_2504_1812842 (same size and density as 1000 genomes, but no structure)
# input_file=/shared/.julia/dev/CodedComputing/simulations/sparse_2504_1812842/inputfile.h5
# output_directory=/shared/.julia/dev/CodedComputing/simulations/sparse_2504_1812842/210115/

inputdataset=X
iteratedataset=V0
ncomponents=3
npasses=7

nwait_all=( 12)
stepsize=1.0
nsubpartitions_all=( 1)
nreplicas=1

# for nsubpartitions in "${nsubpartitions_all[@]}"
# do
#     niterations=$(($npasses * $nsubpartitions))
#     # npartitions=$((12 / $nreplicas))
#     # nwait_all=( 1 $(($npartitions - 2)) $npartitions)
#     for nwait in "${nwait_all[@]}"
#     do
#         # echo "[SAG] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
#         # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates --variancereduced
#         # echo "--"      
#         # echo "nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, SAG w. kickstart"
#         # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates --variancereduced --kickstart
#         # echo "--"           
#         echo "[SGD] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
#         /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
#     done
# done

nwait_all=( 1 3 9 16 18)
nsubpartitions_all=( 1 2 3)
stepsize=0.9
    
# for stepsize in "${stepsize_all[@]}"
# do
for nsubpartitions in "${nsubpartitions_all[@]}"
do
    # niterations=$(($npasses * $nsubpartitions))
    niterations=50

    # nwait=18
    # stepsize=1.0
    # echo "[SAG] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
    # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates --variancereduced
    # echo "--"     

    for nwait in "${nwait_all[@]}"
    do
        # echo "[DSAG] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
        # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates --variancereduced

        # NO --saveiterates !!!
        echo "[SGD] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
        /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents}
    done

    # nwait=12
    # echo "[SAG (--nostale)] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations, stepsize: $stepsize"
    # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates --variancereduced --nostale
    # echo "[SGD] nsubpartitions: ${nsubpartitions}, nwait: ${nwait}, niterations: $niterations"
    # /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --iteratedataset ${iteratedataset} --nreplicas $nreplicas --stepsize ${stepsize} --nsubpartitions ${nsubpartitions} --nwait ${nwait} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
    # echo "---"
    # echo ""
done

echo "Done"