#!/bin/sh -l
# Run 
#SBATCH --job-name=pca.jl
#SBATCH --output=pca.out
#SBATCH --nodes=13
#SBATCH --time=600:00

export JULIA_DEPOT_PATH="/shared/.julia/"
date
filename=/shared/.julia/dev/CodedComputing/src/pca/pca.jl

# (1000, 500, 100)
input_file=/shared/simulations/2020-12-10T11\:19\:49.752/inputfile.h5
output_directory=/shared/simulations/2020-12-10T11\:19\:49.752/

# (10000, 5000, 100)
# input_file=/shared/simulations/2020-12-10T12\:01\:56.976/inputfile.h5
# output_directory=/shared/simulations/2020-12-10T12\:01\:56.976/sgd/

# (8000, 8000, 100)
# input_file=/shared/simulations/2020-12-10T12\:26\:35.934/inputfile.h5
# output_directory=/shared/simulations/2020-12-10T12\:26\:35.934/vrrep/

inputdataset=X
ncomponents=100
niterations=10
stepsize=0.9

echo "Stage 1 (solution quality)"

nwait_all=( 10 11 12)
nsubpartitions_all=( 1 2 3 5 10)
ncomponents_all=( 1 10 50 100 200)
# for nwait in "${nwait_all[@]}"
# do
#     for nsubpartitions in "${nsubpartitions_all[@]}"
#     do
#         for ncomponents in "${ncomponents_all[@]}"
#         do
#             echo "${nwait} ${nsubpartitions} ${ncomponents}"
#             /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --stepsize ${stepsize} --nwait ${nwait} --nsubpartitions ${nsubpartitions} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
#             /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --variancereduced --stepsize ${stepsize} --nwait ${nwait} --nsubpartitions ${nsubpartitions} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
#         done
#     done
# done

# (8000, 8000, 100)
input_file=/shared/simulations/2020-12-10T12\:26\:35.934/inputfile.h5
output_directory=/shared/simulations/2020-12-10T12\:26\:35.934/vrrep/

for nwait in "${nwait_all[@]}"
do
    for nsubpartitions in "${nsubpartitions_all[@]}"
    do
        for ncomponents in "${ncomponents_all[@]}"
        do
            echo "${nwait} ${nsubpartitions} ${ncomponents}"
            /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --stepsize ${stepsize} --nwait ${nwait} --nsubpartitions ${nsubpartitions} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
            /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --variancereduced --stepsize ${stepsize} --nwait ${nwait} --nsubpartitions ${nsubpartitions} --niterations ${niterations} --ncomponents ${ncomponents} --saveiterates
        done
    done
done


# for nsubpartitions in {1..3}
# do
#     for nreplicas in 1
#     do
#         npartitions=$(expr 12 / $nreplicas)
#         for (( nwait=1; nwait<=$npartitions; nwait++ ))
#         do
#             echo "nsubpartitions: ${nsubpartitions}, nreplicas: ${nreplicas}, nwait: ${nwait}"
#             /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --variancereduced --stepsize ${stepsize} --nwait ${nwait} --nsubpartitions ${nsubpartitions} --niterations ${niterations} --ncomponents ${ncomponents} --nreplicas ${nreplicas} --saveiterates
#         done
#     done
# done

# echo "Stage 2 (time per iteration)"
# for nwait in {1..9}
# do
#     echo "nwait: ${nwait}"
#     /opt/amazon/openmpi/bin/mpirun -n "$SLURM_NTASKS" julia --project "${filename}" "${input_file}" "${output_directory}/output $(date).h5" --inputdataset ${inputdataset} --nwait ${nwait} --niterations 10000  --ncomponents 100
# done
echo "Done"